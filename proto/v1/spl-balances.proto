syntax = "proto3";

package solana.spl.balances.v1;

message Events {
  // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/e34251682bac9c3252af30e91e999f13dd098b9f/contracts/token/ERC20/IERC20.sol#L32
  repeated BalanceByAccount balances_by_account = 4;

  // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Permit.sol
  repeated PermitByOwner permits_by_owner = 2;

  // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/e34251682bac9c3252af30e91e999f13dd098b9f/contracts/token/ERC20/IERC20.sol#L50
  repeated AllowanceByOwnerSpender allowances_by_owner_spender = 3;
}

message BalanceByAccount {
  bytes contract = 1; // log.address
  bytes account = 2;
  string amount = 3; // balanceOf(address account) -> uint256
}

message PermitByOwner {
  bytes contract = 1; // log.address
  bytes owner = 2;
  string nonces = 3; // nonces(address owner) -> uint256
}

message AllowanceByOwnerSpender {
  bytes contract = 1; // log.address
  bytes owner = 2;
  bytes spender = 3;
  string allowance = 4; // allowance(address owner, address spender) -> uint256
}