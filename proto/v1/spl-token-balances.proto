syntax = "proto3";

package solana.spl.token.balances.v1;

message Events {
  // https://github.com/solana-program/token-2022
  repeated Balance balances = 1;
}

message Balance {
  // -- transaction --
  bytes tx_hash = 1;

  // -- indexes --
  uint32 execution_index = 2;
  uint32 instruction_index = 3;
  uint32 inner_instruction_index = 4;

  // -- authority --
  bytes authority = 8;
  repeated bytes multisig_authority = 9;

  // -- data --
  bytes source = 10;
  bytes destination = 11;
  uint64 amount = 12;
  optional bytes mint = 13;
  optional uint32 decimals = 14; // uint8
}

message InitializeMint {
  // -- transaction --
  bytes tx_hash = 1;

  // -- indexes --
  uint32 execution_index = 2;
  uint32 instruction_index = 3;
  uint32 inner_instruction_index = 4;

  // -- instruction --
  bytes program_id = 5; // instruction.program_id()
  uint32 stack_height = 6; // instruction.stack_height()
  Instructions instruction = 7; // enum

  // -- data --
  bytes mint = 10;
  bytes mint_authority = 11;
  optional bytes freeze_authority = 12;
  uint32 decimals = 13; // uint8
}

message InitializeAccount {
  // -- transaction --
  bytes tx_hash = 1;

  // -- indexes --
  uint32 execution_index = 2;
  uint32 instruction_index = 3;
  uint32 inner_instruction_index = 4;

  // -- instruction --
  bytes program_id = 5; // instruction.program_id()
  uint32 stack_height = 6; // instruction.stack_height()
  Instructions instruction = 7; // enum

  // -- data --
  bytes account = 10;
  bytes mint = 11;
  bytes owner = 12;
}

message Approve {
  // -- transaction --
  bytes tx_hash = 1;

  // -- indexes --
  uint32 execution_index = 2;
  uint32 instruction_index = 3;
  uint32 inner_instruction_index = 4;

  // -- instruction --
  bytes program_id = 5; // instruction.program_id()
  uint32 stack_height = 6; // instruction.stack_height()
  Instructions instruction = 7; // enum

  // -- authority --
  bytes authority = 8;
  repeated bytes multisig_authority = 9;

  // -- data --
  bytes source = 10;
  optional bytes mint = 11;
  bytes delegate = 12;
  bytes owner = 13;
  uint64 amount = 14;
  optional uint32 decimals = 15; // uint8
}

message Revoke {
  // -- transaction --
  bytes tx_hash = 1;

  // -- indexes --
  uint32 execution_index = 2;
  uint32 instruction_index = 3;
  uint32 inner_instruction_index = 4;

  // -- instruction --
  bytes program_id = 5; // instruction.program_id()
  uint32 stack_height = 6; // instruction.stack_height()
  Instructions instruction = 7; // enum

  // -- authority --
  bytes authority = 8;
  repeated bytes multisig_authority = 9;

  // -- data --
  bytes source = 10;
  bytes owner = 13;
}
