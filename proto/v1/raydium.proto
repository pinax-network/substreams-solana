syntax = "proto3";

package raydium.v1;

// -----------------------------------------------------------------------------
// Top-level containers
// -----------------------------------------------------------------------------
message Events {
  repeated Transaction transactions = 1;
}

message Transaction {
  bytes  signature                = 1;
  bytes  fee_payer                = 2;          // Fee-payer account address
  repeated bytes signers          = 3;          // Signers of the tx
  uint64 fee                      = 4;          // Lamports paid
  uint64 compute_units_consumed   = 5;          // CU used
  repeated Instruction instructions = 6;        // Executed instructions
}

// -----------------------------------------------------------------------------
// Instruction + typed payloads
// -----------------------------------------------------------------------------
message Instruction {
  bytes  program_id   = 1;
  uint32 stack_height = 2;

  oneof instruction {
    InitLog         init_log          = 3;
    DepositLog      deposit_log       = 4;
    WithdrawLog     withdraw_log      = 5;
    SwapBaseInLog   swap_base_in_log  = 6;
    SwapBaseOutLog  swap_base_out_log = 7;
  }
}

// -----------------------------------------------------------------------------
// Raydium event payloads (renumbered from 1)
// -----------------------------------------------------------------------------
message InitLog {
  uint32 pc_decimals   = 1;
  uint32 coin_decimals = 2;
  uint64 pc_lot_size   = 3;
  uint64 coin_lot_size = 4;
  uint64 pc_amount     = 5;
  uint64 coin_amount   = 6;
  bytes  market        = 7;   // 32-byte Pubkey
}

message DepositLog {
  uint64 max_coin    = 1;
  uint64 max_pc      = 2;
  uint64 base        = 3;
  uint64 pool_coin   = 4;
  uint64 pool_pc     = 5;
  uint64 pool_lp     = 6;
  string calc_pnl_x  = 7;     // UInt128 as decimal string
  string calc_pnl_y  = 8;     // UInt128 as decimal string
  uint64 deduct_coin = 9;
  uint64 deduct_pc   = 10;
  uint64 mint_lp     = 11;
}

message WithdrawLog {
  uint64 withdraw_lp = 1;
  uint64 user_lp     = 2;
  uint64 pool_coin   = 3;
  uint64 pool_pc     = 4;
  uint64 pool_lp     = 5;
  string calc_pnl_x  = 6;     // UInt128 as decimal string
  string calc_pnl_y  = 7;     // UInt128 as decimal string
  uint64 out_coin    = 8;
  uint64 out_pc      = 9;
}

message SwapBaseInLog {
  uint64 amount_in    = 1;
  uint64 minimum_out  = 2;
  uint64 direction    = 3;
  uint64 user_source  = 4;
  uint64 pool_coin    = 5;
  uint64 pool_pc      = 6;
  uint64 out_amount   = 7;
}

message SwapBaseOutLog {
  uint64 max_in       = 1;
  uint64 amount_out   = 2;
  uint64 direction    = 3;
  uint64 user_source  = 4;
  uint64 pool_coin    = 5;
  uint64 pool_pc      = 6;
  uint64 deduct_in    = 7;
}
