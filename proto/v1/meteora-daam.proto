syntax = "proto3";

package meteora.daam.v1;

// -----------------------------------------------------------------------------
// Top-level containers
// -----------------------------------------------------------------------------
message Events {
  repeated Transaction transactions = 1;
}

message Transaction {
  bytes signature = 1;
  bytes fee_payer = 2;
  repeated bytes signers = 3;
  uint64 fee = 4;
  uint64 compute_units_consumed = 5;
  repeated Instruction instructions = 6;
  repeated Log logs = 7;
}

// -----------------------------------------------------------------------------
// Instruction + typed payloads
// -----------------------------------------------------------------------------
message Instruction {
  bytes program_id = 1;
  uint32 stack_height = 2;
  oneof instruction {
    AddLiquidityInstruction add_liquidity = 3;
    RemoveLiquidityInstruction remove_liquidity = 4;
    SwapInstruction swap = 5;
  }
}

message AddLiquidityInstruction {
  AddLiquidityAccounts accounts = 1;
  AddLiquidityParameters params = 2;
}

message RemoveLiquidityInstruction {
  RemoveLiquidityAccounts accounts = 1;
  RemoveLiquidityParameters params = 2;
}

message SwapInstruction {
  SwapAccounts accounts = 1;
  SwapParameters params = 2;
}

message AddLiquidityAccounts {
  bytes pool = 1;
  bytes position = 2;
  bytes token_a_account = 3;
  bytes token_b_account = 4;
  bytes token_a_vault = 5;
  bytes token_b_vault = 6;
  bytes token_a_mint = 7;
  bytes token_b_mint = 8;
  bytes position_nft_account = 9;
  bytes owner = 10;
  bytes token_a_program = 11;
  bytes token_b_program = 12;
  bytes event_authority = 13;
  bytes program = 14;
}

message RemoveLiquidityAccounts {
  bytes pool_authority = 1;
  bytes pool = 2;
  bytes position = 3;
  bytes token_a_account = 4;
  bytes token_b_account = 5;
  bytes token_a_vault = 6;
  bytes token_b_vault = 7;
  bytes token_a_mint = 8;
  bytes token_b_mint = 9;
  bytes position_nft_account = 10;
  bytes owner = 11;
  bytes token_a_program = 12;
  bytes token_b_program = 13;
  bytes event_authority = 14;
  bytes program = 15;
}

message SwapAccounts {
  bytes pool_authority = 1;
  bytes pool = 2;
  bytes input_token_account = 3;
  bytes output_token_account = 4;
  bytes token_a_vault = 5;
  bytes token_b_vault = 6;
  bytes token_a_mint = 7;
  bytes token_b_mint = 8;
  bytes payer = 9;
  bytes token_a_program = 10;
  bytes token_b_program = 11;
  optional bytes referral_token_account = 12;
  bytes event_authority = 13;
  bytes program = 14;
}

message AddLiquidityParameters {
  string liquidity_delta = 1;
  uint64 token_a_amount_threshold = 2;
  uint64 token_b_amount_threshold = 3;
}

message RemoveLiquidityParameters {
  string liquidity_delta = 1;
  uint64 token_a_amount_threshold = 2;
  uint64 token_b_amount_threshold = 3;
}

message SwapParameters {
  uint64 amount_in = 1;
  uint64 minimum_amount_out = 2;
}

message SwapResult {
  uint64 output_amount = 1;
  string next_sqrt_price = 2;
  uint64 lp_fee = 3;
  uint64 protocol_fee = 4;
  uint64 partner_fee = 5;
  uint64 referral_fee = 6;
}

// -----------------------------------------------------------------------------
// Logs
// -----------------------------------------------------------------------------
message Log {
  bytes program_id = 1;
  uint32 invoke_depth = 2;
  oneof log {
    AddLiquidityLog add_liquidity = 3;
    RemoveLiquidityLog remove_liquidity = 4;
    SwapLog swap = 5;
  }
}

message AddLiquidityLog {
  bytes pool = 1;
  bytes position = 2;
  bytes owner = 3;
  AddLiquidityParameters params = 4;
  uint64 token_a_amount = 5;
  uint64 token_b_amount = 6;
  uint64 total_amount_a = 7;
  uint64 total_amount_b = 8;
}

message RemoveLiquidityLog {
  bytes pool = 1;
  bytes position = 2;
  bytes owner = 3;
  RemoveLiquidityParameters params = 4;
  uint64 token_a_amount = 5;
  uint64 token_b_amount = 6;
}

message SwapLog {
  bytes pool = 1;
  uint32 trade_direction = 2;
  bool has_referral = 3;
  SwapParameters params = 4;
  SwapResult result = 5;
  uint64 actual_amount_in = 6;
  uint64 current_timestamp = 7;
}
