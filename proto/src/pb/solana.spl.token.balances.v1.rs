// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Events {
    #[prost(message, repeated, tag="1")]
    pub transactions: ::prost::alloc::vec::Vec<Transaction>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Transaction {
    #[prost(bytes="vec", tag="1")]
    pub signature: ::prost::alloc::vec::Vec<u8>,
    /// Fee payer account address.
    #[prost(bytes="vec", tag="2")]
    pub fee_payer: ::prost::alloc::vec::Vec<u8>,
    /// Signers of the transaction.
    #[prost(bytes="vec", repeated, tag="3")]
    pub signers: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
    /// Lamports paid for this instruction.
    #[prost(uint64, tag="4")]
    pub fee: u64,
    /// Compute units consumed by this instruction.
    #[prost(uint64, tag="5")]
    pub compute_units_consumed: u64,
    /// Token balances before the transaction.
    #[prost(message, repeated, tag="6")]
    pub pre_token_balances: ::prost::alloc::vec::Vec<TokenBalance>,
    /// Token balances after the transaction.
    #[prost(message, repeated, tag="7")]
    pub post_token_balances: ::prost::alloc::vec::Vec<TokenBalance>,
    /// Accounts involved in the transaction.
    #[prost(bytes="vec", repeated, tag="8")]
    pub accounts: ::prost::alloc::vec::Vec<::prost::alloc::vec::Vec<u8>>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TokenBalance {
    #[prost(bytes="vec", tag="1")]
    pub program_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="2")]
    pub account: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint32, tag="3")]
    pub account_index: u32,
    #[prost(bytes="vec", tag="4")]
    pub mint: ::prost::alloc::vec::Vec<u8>,
    #[prost(uint64, tag="5")]
    pub amount: u64,
    /// uint8
    #[prost(uint32, tag="6")]
    pub decimals: u32,
}
// @@protoc_insertion_point(module)
